#!/usr/bin/env bash

: ${FOLDER:="$(pwd)"}
: ${EXCLUDE:=""}
: ${INCLUDE:=""}

FOLDER="$(realpath $FOLDER)"

if [[ -n "$1" ]];then
  command="$1"
  shift
fi
: ${command:="list"}

git_folders="$(find ${FOLDER} -maxdepth 2 -type d -path "*/.git")"

function filter_folders_with_changes() {
  parallel "git --git-dir={} --work-tree={//} status -sb \
  | sed -e '/^## [^ ]*\$/d' \
  | grep -v '^\$' >/dev/null && echo '{}' \
  "
}
export -f filter_folders_with_changes

case $command in 
  pull)
    echo "$git_folders" \
      | if [[ -n "$EXCLUDE" ]]; then grep -v -E "$EXCLUDE"; else cat; fi \
      | if [[ -n "$INCLUDE" ]]; then grep -E "$INCLUDE"; else cat; fi \
      | parallel -k -j1 "\
if [ -x \"{//}/.local_git_update\" ];then \
  echo \$(basename {//}); \
  {//}/.local_git_update pull; \
else
  pull_result=\"\$(git --git-dir={} --work-tree={//} pull -q 2>&1 )\"; \
  if [[ -n \"\$pull_result\" ]];then
    echo \$(basename {//}); \
    echo \$pull_result ; \
  fi
fi\
"
    ;;
  filter)
    echo "$git_folders" \
      | parallel "git --git-dir={} --work-tree={//} config --get remote.origin.url" \
      | sort \
      | if [[ -n "$EXCLUDE" ]]; then grep -v -E "$EXCLUDE"; else cat; fi \
      | if [[ -n "$INCLUDE" ]]; then grep -E "$INCLUDE"; else cat; fi \
      | if [[ -n "$@" ]]; then grep -E "$@"; else cat; fi
    ;;
  list)
    echo "$git_folders" \
      | filter_folders_with_changes \
      | if [[ -n "$EXCLUDE" ]]; then grep -v -E "$EXCLUDE"; else cat; fi \
      | if [[ -n "$INCLUDE" ]]; then grep -E "$INCLUDE"; else cat; fi \
      | parallel -j 200% "\
echo \$(basename {//}); \
git --git-dir={} --work-tree={//} status -sb \
| sed -e 's/^/    /g' \
"
    ;;
  push)
    commit_message="${@:-"commit"}"
    echo "$git_folders" \
      | filter_folders_with_changes \
      | if [[ -n "$EXCLUDE" ]]; then grep -v -E "$EXCLUDE"; else cat; fi \
      | if [[ -n "$INCLUDE" ]]; then grep -E "$INCLUDE"; else cat; fi \
      | parallel "\
echo push \$(basename {//});\
if [ -x \"{//}/.local_git_update\" ];then \
  {//}/.local_git_update push; \
else
  git --git-dir={} --work-tree={//} add --all;\
  git --git-dir={} --work-tree={//} commit -m '${commit_message}' -q;\
  git --git-dir={} --work-tree={//} pull --rebase -q;\
  git --git-dir={} --work-tree={//} push -q;\
fi\
"
    ;;
  *)
    echo "command: $command unknown"
    ;;
esac

